version: '3.8'

services:
  backend:
    container_name: django
    build:
      context: ./
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - 8000:8000
    volumes:
      - static_volume:/home/app/web/static
      - log_volume:/home/app/web/logs
    env_file:
      - ./.env
    depends_on:
      - database
  
  cron:
    container_name: celery-beat
    build: .
    entrypoint: celery -A racks beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - backups_volume:/home/app/web/backup
    env_file:
      - ./.env
    depends_on:
      - message-brocker
      - backend
      - worker

  worker:
    container_name: celery-worker
    build: .
    entrypoint: celery -A racks worker -l INFO
    volumes:
      - backups_volume:/home/app/web/backup
    env_file:
      - ./.env
    depends_on:
      - message-brocker
      - backend
  
  message-brocker:
    container_name: redis
    image: redis:6.2.7-alpine

  database:
    container_name: postgres
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.db

  frontend:
    container_name: vue
    build:
      context: ./racks_frontend
      dockerfile: Dockerfile
    volumes:
      - vue_dist:/app/dist
    ports:
      - 8080:8080
    depends_on:
      - backend
      
  web-server:
    container_name: nginx
    build: ./nginx
    ports:
      - 80:80
    volumes:
      - static_volume:/home/app/web/static
      - vue_dist:/app/dist
    depends_on:
      - backend
      - frontend


volumes:
  postgres_data:
  static_volume:
  log_volume:
  backups_volume:
  vue_dist: